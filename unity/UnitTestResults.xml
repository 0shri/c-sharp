<?xml version="1.0" encoding="utf-8"?>
<!--This file represents the results of running a test suite-->
<test-results name="Unity Tests" total="124" errors="2" failures="0" not-run="0" inconclusive="76" ignored="0" skipped="0" invalid="0" date="2014-07-16" time="19:10:27">
  <environment nunit-version="2.6.2-Unity" clr-version="2.0.50727.1433" os-version="Unix 13.2.0.0" platform="Unix" cwd="/Users/rajat-ml/Projects/test/Unity-for-all/PubnubUnity" machine-name="Rajat-MLs-Mac.local" user="rajat-ml" user-domain="Rajat-MLs-Mac.local" />
  <culture-info current-culture="" current-uiculture="" />
  <test-suite name="Unit Tests" type="Assembly" executed="True" result="Success" success="True" time="870.054">
    <results>
      <test-case name="PubNubMessaging.Tests.EncryptionTests.TestArrayDecryption" executed="True" result="Success" success="True" time="0.107">
      </test-case>
      <test-case name="PubNubMessaging.Tests.EncryptionTests.TestArrayEncryption" executed="True" result="Success" success="True" time="0.019">
      </test-case>
      <test-case name="PubNubMessaging.Tests.EncryptionTests.TestGermanCharsDecryption" executed="True" result="Success" success="True" time="0.048">
      </test-case>
      <test-case name="PubNubMessaging.Tests.EncryptionTests.TestGermanCharsEncryption" executed="True" result="Success" success="True" time="0.017">
      </test-case>
      <test-case name="PubNubMessaging.Tests.EncryptionTests.TestHashDecryption" executed="True" result="Success" success="True" time="0.006">
      </test-case>
      <test-case name="PubNubMessaging.Tests.EncryptionTests.TestHashEncryption" executed="True" result="Success" success="True" time="0.001">
      </test-case>
      <test-case name="PubNubMessaging.Tests.EncryptionTests.TestMyObjectDecryption" executed="True" result="Success" success="True" time="0.044">
      </test-case>
      <test-case name="PubNubMessaging.Tests.EncryptionTests.TestMyObjectEncryption" executed="True" result="Success" success="True" time="0.057">
      </test-case>
      <test-case name="PubNubMessaging.Tests.EncryptionTests.TestNullDecryption" executed="True" result="Success" success="True" time="0.011">
      </test-case>
      <test-case name="PubNubMessaging.Tests.EncryptionTests.TestNullEncryption" executed="True" result="Success" success="True" time="0.007">
      </test-case>
      <test-case name="PubNubMessaging.Tests.EncryptionTests.TestObjectDecryption" executed="True" result="Success" success="True" time="0.002">
      </test-case>
      <test-case name="PubNubMessaging.Tests.EncryptionTests.TestObjectEncryption" executed="True" result="Success" success="True" time="0.001">
      </test-case>
      <test-case name="PubNubMessaging.Tests.EncryptionTests.TestPAMSignature" executed="True" result="Success" success="True" time="0.015">
      </test-case>
      <test-case name="PubNubMessaging.Tests.EncryptionTests.TestPubNubDecryption1" executed="True" result="Success" success="True" time="0.013">
      </test-case>
      <test-case name="PubNubMessaging.Tests.EncryptionTests.TestPubNubDecryption2" executed="True" result="Success" success="True" time="0.014">
      </test-case>
      <test-case name="PubNubMessaging.Tests.EncryptionTests.TestPubNubEncryption1" executed="True" result="Success" success="True" time="0.001">
      </test-case>
      <test-case name="PubNubMessaging.Tests.EncryptionTests.TestPubNubEncryption2" executed="True" result="Success" success="True" time="0.007">
      </test-case>
      <test-case name="PubNubMessaging.Tests.EncryptionTests.TestStuffcanDecryption" executed="True" result="Success" success="True" time="0.007">
      </test-case>
      <test-case name="PubNubMessaging.Tests.EncryptionTests.TestStuffCanEncryption" executed="True" result="Success" success="True" time="0.001">
      </test-case>
      <test-case name="PubNubMessaging.Tests.EncryptionTests.TestUnicodeCharsDecryption" executed="True" result="Success" success="True" time="0.018">
      </test-case>
      <test-case name="PubNubMessaging.Tests.EncryptionTests.TestUnicodeCharsEncryption" executed="True" result="Success" success="True" time="0.008">
      </test-case>
      <test-case name="PubNubMessaging.Tests.EncryptionTests.TestYayDecryption" executed="True" result="Success" success="True" time="0.025">
      </test-case>
      <test-case name="PubNubMessaging.Tests.EncryptionTests.TestYayDecryptionBasic" executed="True" result="Success" success="True" time="0.002">
      </test-case>
      <test-case name="PubNubMessaging.Tests.EncryptionTests.TestYayEncryption" executed="True" result="Success" success="True" time="0.002">
      </test-case>
      <test-case name="PubNubMessaging.Tests.EncryptionTests.TestYayEncryptionBasic" executed="True" result="Success" success="True" time="0.002">
      </test-case>
      <test-case name="PubNubMessaging.Tests.GenerateSampleGrant.AtChannelLevel" executed="True" result="Success" success="True" time="19.280">
      </test-case>
      <test-case name="PubNubMessaging.Tests.GenerateSampleGrant.AtUserLevel" executed="True" result="Success" success="True" time="14.956">
      </test-case>
      <test-case name="PubNubMessaging.Tests.WhenAClientIsPresented.IfHereNowIsCalledThenItShouldReturnInfo" executed="True" result="Success" success="True" time="7.411">
      </test-case>
      <test-case name="PubNubMessaging.Tests.WhenAClientIsPresented.IfHereNowIsCalledThenItShouldReturnInfoCipher" executed="True" result="Success" success="True" time="39.591">
      </test-case>
      <test-case name="PubNubMessaging.Tests.WhenAClientIsPresented.IfHereNowIsCalledThenItShouldReturnInfoCipherSecret" executed="True" result="Success" success="True" time="39.270">
      </test-case>
      <test-case name="PubNubMessaging.Tests.WhenAClientIsPresented.IfHereNowIsCalledThenItShouldReturnInfoCipherSecretSSL" executed="True" result="Success" success="True" time="36.127">
      </test-case>
      <test-case name="PubNubMessaging.Tests.WhenAClientIsPresented.IfHereNowIsCalledThenItShouldReturnInfoCipherSSL" executed="True" result="Error" success="False" time="49.112">
        <failure>
          <message>
<![CDATA[System.NullReferenceException : Object reference not set to an instance of an object]]>
          </message>
          <stack-trace>
<![CDATA[at PubNubMessaging.Tests.WhenAClientIsPresented.ParseResponse (System.Object commonResponse, PubNubMessaging.Core.Pubnub pubnub) [0x00024] in /Users/rajat-ml/Projects/test/Unity-for-all/PubnubUnity/Assets/Editor/WhenAClientIsPresented.cs:420
at PubNubMessaging.Tests.WhenAClientIsPresented.IfHereNowIsCalledThenItShouldReturnInfoCipherSSL () [0x0005b] in /Users/rajat-ml/Projects/test/Unity-for-all/PubnubUnity/Assets/Editor/WhenAClientIsPresented.cs:321
]]>
          </stack-trace>
        </failure>
      </test-case>
      <test-case name="PubNubMessaging.Tests.WhenAClientIsPresented.IfHereNowIsCalledThenItShouldReturnInfoSecret" executed="True" result="Success" success="True" time="36.787">
      </test-case>
      <test-case name="PubNubMessaging.Tests.WhenAClientIsPresented.IfHereNowIsCalledThenItShouldReturnInfoSecretSSL" executed="True" result="Success" success="True" time="36.826">
      </test-case>
      <test-case name="PubNubMessaging.Tests.WhenAClientIsPresented.IfHereNowIsCalledThenItShouldReturnInfoSSL" executed="True" result="Error" success="False" time="43.430">
        <failure>
          <message>
<![CDATA[System.NullReferenceException : Object reference not set to an instance of an object]]>
          </message>
          <stack-trace>
<![CDATA[at PubNubMessaging.Tests.WhenAClientIsPresented.ParseResponse (System.Object commonResponse, PubNubMessaging.Core.Pubnub pubnub) [0x00024] in /Users/rajat-ml/Projects/test/Unity-for-all/PubnubUnity/Assets/Editor/WhenAClientIsPresented.cs:420
at PubNubMessaging.Tests.WhenAClientIsPresented.IfHereNowIsCalledThenItShouldReturnInfoSSL () [0x0005b] in /Users/rajat-ml/Projects/test/Unity-for-all/PubnubUnity/Assets/Editor/WhenAClientIsPresented.cs:384
]]>
          </stack-trace>
        </failure>
      </test-case>
      <test-case name="PubNubMessaging.Tests.WhenAClientIsPresented.IfHereNowIsCalledWithState" executed="True" result="Success" success="True" time="300.277">
      </test-case>
      <test-case name="PubNubMessaging.Tests.WhenAClientIsPresented.SetAndDeleteGlobalState" executed="True" result="Success" success="True" time="23.170">
      </test-case>
      <test-case name="PubNubMessaging.Tests.WhenAClientIsPresented.SetAndGetGlobalState" executed="True" result="Success" success="True" time="3.749">
      </test-case>
      <test-case name="PubNubMessaging.Tests.WhenAClientIsPresented.TestGlobalHerewNow" executed="True" result="Success" success="True" time="26.441">
      </test-case>
      <test-case name="PubNubMessaging.Tests.WhenAClientIsPresented.TestPresenceHeartbeat" executed="True" result="Success" success="True" time="97.802">
      </test-case>
      <test-case name="PubNubMessaging.Tests.WhenAClientIsPresented.TestsOnUNITY_EDITOR" executed="True" result="Success" success="True" time="0.001">
      </test-case>
      <test-case name="PubNubMessaging.Tests.WhenAClientIsPresented.TestsOnUNITY_EDITOR_OSX" executed="True" result="Success" success="True" time="0.001">
      </test-case>
      <test-case name="PubNubMessaging.Tests.WhenAClientIsPresented.TestsOnUNITY_STANDALONE" executed="True" result="Success" success="True" time="0.001">
      </test-case>
      <test-case name="PubNubMessaging.Tests.WhenAClientIsPresented.TestsUsingJSONFX_UNITY_IOS" executed="True" result="Success" success="True" time="0.001">
      </test-case>
      <test-case name="PubNubMessaging.Tests.WhenAClientIsPresented.TestWhereNow" executed="True" result="Success" success="True" time="21.172">
      </test-case>
      <test-case name="PubNubMessaging.Tests.WhenAClientIsPresented.ThenItShouldReturnReceivedMessage" executed="True" result="Success" success="True" time="17.028">
      </test-case>
      <test-case name="PubNubMessaging.Tests.WhenAClientIsPresented.ThenItShouldReturnReceivedMessageSSL" executed="True" result="Success" success="True" time="28.929">
      </test-case>
      <test-case name="PubNubMessaging.Tests.WhenAClientIsPresented.ThenPresenceShouldReturnCustomUUID" executed="True" result="Success" success="True" time="28.257">
      </test-case>
      <test-case name="PubNubMessaging.Tests.WhenAMessageIsPublished.TestIfSSLNotProvidedThenDefaultShouldBeFalse" executed="False" result="Inconclusive">
        <reason>
          <message>
          </message>
        </reason>
      </test-case>
      <test-case name="PubNubMessaging.Tests.WhenAMessageIsPublished.TestNullShouldBeTreatedAsEmpty" executed="False" result="Inconclusive">
        <reason>
          <message>
          </message>
        </reason>
      </test-case>
      <test-case name="PubNubMessaging.Tests.WhenAMessageIsPublished.Then1PublishKeyShouldBeOverriden" executed="False" result="Inconclusive">
        <reason>
          <message>
          </message>
        </reason>
      </test-case>
      <test-case name="PubNubMessaging.Tests.WhenAMessageIsPublished.Then2PublishKeyShouldNotBeEmptyAfterOverriden" executed="False" result="Inconclusive">
        <reason>
          <message>
          </message>
        </reason>
      </test-case>
      <test-case name="PubNubMessaging.Tests.WhenAMessageIsPublished.Then3SecretKeyShouldBeProvidedOptionally" executed="False" result="Inconclusive">
        <reason>
          <message>
          </message>
        </reason>
      </test-case>
      <test-case name="PubNubMessaging.Tests.WhenAMessageIsPublished.ThenItShouldGenerateUniqueIdentifier" executed="False" result="Inconclusive">
        <reason>
          <message>
          </message>
        </reason>
      </test-case>
      <test-case name="PubNubMessaging.Tests.WhenAMessageIsPublished.ThenItShouldReturnSuccessCodeAndInfo" executed="False" result="Inconclusive">
        <reason>
          <message>
          </message>
        </reason>
      </test-case>
      <test-case name="PubNubMessaging.Tests.WhenAMessageIsPublished.ThenItShouldReturnSuccessCodeAndInfoForComplexMessage" executed="False" result="Inconclusive">
        <reason>
          <message>
          </message>
        </reason>
      </test-case>
      <test-case name="PubNubMessaging.Tests.WhenAMessageIsPublished.ThenItShouldReturnSuccessCodeAndInfoWhenEncrypted" executed="False" result="Inconclusive">
        <reason>
          <message>
          </message>
        </reason>
      </test-case>
      <test-case name="PubNubMessaging.Tests.WhenAMessageIsPublished.ThenItShouldReturnSuccessCodeAndInfoWhenEncryptedAndSecretKeyed" executed="False" result="Inconclusive">
        <reason>
          <message>
          </message>
        </reason>
      </test-case>
      <test-case name="PubNubMessaging.Tests.WhenDetailedHistoryIsRequested.DetailedHistoryDecryptedExample" executed="False" result="Inconclusive">
        <reason>
          <message>
          </message>
        </reason>
      </test-case>
      <test-case name="PubNubMessaging.Tests.WhenDetailedHistoryIsRequested.DetailedHistoryExample" executed="False" result="Inconclusive">
        <reason>
          <message>
          </message>
        </reason>
      </test-case>
      <test-case name="PubNubMessaging.Tests.WhenDetailedHistoryIsRequested.ItShouldReturnDetailedHistory" executed="False" result="Inconclusive">
        <reason>
          <message>
          </message>
        </reason>
      </test-case>
      <test-case name="PubNubMessaging.Tests.WhenDetailedHistoryIsRequested.TestEncryptedDetailedHistory" executed="False" result="Inconclusive">
        <reason>
          <message>
          </message>
        </reason>
      </test-case>
      <test-case name="PubNubMessaging.Tests.WhenDetailedHistoryIsRequested.TestEncryptedDetailedHistoryParams" executed="False" result="Inconclusive">
        <reason>
          <message>
          </message>
        </reason>
      </test-case>
      <test-case name="PubNubMessaging.Tests.WhenDetailedHistoryIsRequested.TestEncryptedDetailedHistoryParamsSSL" executed="False" result="Inconclusive">
        <reason>
          <message>
          </message>
        </reason>
      </test-case>
      <test-case name="PubNubMessaging.Tests.WhenDetailedHistoryIsRequested.TestEncryptedDetailedHistorySSL" executed="False" result="Inconclusive">
        <reason>
          <message>
          </message>
        </reason>
      </test-case>
      <test-case name="PubNubMessaging.Tests.WhenDetailedHistoryIsRequested.TestEncryptedSecretDetailedHistoryParams" executed="False" result="Inconclusive">
        <reason>
          <message>
          </message>
        </reason>
      </test-case>
      <test-case name="PubNubMessaging.Tests.WhenDetailedHistoryIsRequested.TestEncryptedSecretDetailedHistoryParamsSSL" executed="False" result="Inconclusive">
        <reason>
          <message>
          </message>
        </reason>
      </test-case>
      <test-case name="PubNubMessaging.Tests.WhenDetailedHistoryIsRequested.TestUnencryptedDetailedHistory" executed="False" result="Inconclusive">
        <reason>
          <message>
          </message>
        </reason>
      </test-case>
      <test-case name="PubNubMessaging.Tests.WhenDetailedHistoryIsRequested.TestUnencryptedDetailedHistoryParams" executed="False" result="Inconclusive">
        <reason>
          <message>
          </message>
        </reason>
      </test-case>
      <test-case name="PubNubMessaging.Tests.WhenDetailedHistoryIsRequested.TestUnencryptedDetailedHistoryParamsSSL" executed="False" result="Inconclusive">
        <reason>
          <message>
          </message>
        </reason>
      </test-case>
      <test-case name="PubNubMessaging.Tests.WhenDetailedHistoryIsRequested.TestUnencryptedDetailedHistorySSL" executed="False" result="Inconclusive">
        <reason>
          <message>
          </message>
        </reason>
      </test-case>
      <test-case name="PubNubMessaging.Tests.WhenDetailedHistoryIsRequested.TestUnencryptedSecretDetailedHistoryParams" executed="False" result="Inconclusive">
        <reason>
          <message>
          </message>
        </reason>
      </test-case>
      <test-case name="PubNubMessaging.Tests.WhenDetailedHistoryIsRequested.TestUnencryptedSecretDetailedHistoryParamsSSL" executed="False" result="Inconclusive">
        <reason>
          <message>
          </message>
        </reason>
      </test-case>
      <test-case name="PubNubMessaging.Tests.WhenGetRequestServerTime.ThenItShouldReturnTimeStamp" executed="False" result="Inconclusive">
        <reason>
          <message>
          </message>
        </reason>
      </test-case>
      <test-case name="PubNubMessaging.Tests.WhenGetRequestServerTime.ThenItShouldReturnTimeStampSSL" executed="False" result="Inconclusive">
        <reason>
          <message>
          </message>
        </reason>
      </test-case>
      <test-case name="PubNubMessaging.Tests.WhenGetRequestServerTime.TranslateDateTimeToUnixTime" executed="False" result="Inconclusive">
        <reason>
          <message>
          </message>
        </reason>
      </test-case>
      <test-case name="PubNubMessaging.Tests.WhenGetRequestServerTime.TranslateUnixTimeToDateTime" executed="False" result="Inconclusive">
        <reason>
          <message>
          </message>
        </reason>
      </test-case>
      <test-case name="PubNubMessaging.Tests.WhenSubscribedToAChannel.TestForComplexMessage" executed="False" result="Inconclusive">
        <reason>
          <message>
          </message>
        </reason>
      </test-case>
      <test-case name="PubNubMessaging.Tests.WhenSubscribedToAChannel.TestForComplexMessageCipher" executed="False" result="Inconclusive">
        <reason>
          <message>
          </message>
        </reason>
      </test-case>
      <test-case name="PubNubMessaging.Tests.WhenSubscribedToAChannel.TestForComplexMessageCipherSecret" executed="False" result="Inconclusive">
        <reason>
          <message>
          </message>
        </reason>
      </test-case>
      <test-case name="PubNubMessaging.Tests.WhenSubscribedToAChannel.TestForComplexMessageCipherSecretSSL" executed="False" result="Inconclusive">
        <reason>
          <message>
          </message>
        </reason>
      </test-case>
      <test-case name="PubNubMessaging.Tests.WhenSubscribedToAChannel.TestForComplexMessageCipherSSL" executed="False" result="Inconclusive">
        <reason>
          <message>
          </message>
        </reason>
      </test-case>
      <test-case name="PubNubMessaging.Tests.WhenSubscribedToAChannel.TestForComplexMessageSecret" executed="False" result="Inconclusive">
        <reason>
          <message>
          </message>
        </reason>
      </test-case>
      <test-case name="PubNubMessaging.Tests.WhenSubscribedToAChannel.TestForComplexMessageSecretSSL" executed="False" result="Inconclusive">
        <reason>
          <message>
          </message>
        </reason>
      </test-case>
      <test-case name="PubNubMessaging.Tests.WhenSubscribedToAChannel.TestForComplexMessageSSL" executed="False" result="Inconclusive">
        <reason>
          <message>
          </message>
        </reason>
      </test-case>
      <test-case name="PubNubMessaging.Tests.WhenSubscribedToAChannel.ThenDuplicateChannelShouldReturnAlreadySubscribed" executed="False" result="Inconclusive">
        <reason>
          <message>
          </message>
        </reason>
      </test-case>
      <test-case name="PubNubMessaging.Tests.WhenSubscribedToAChannel.ThenSubscribeShouldReturnConnectStatus" executed="False" result="Inconclusive">
        <reason>
          <message>
          </message>
        </reason>
      </test-case>
      <test-case name="PubNubMessaging.Tests.WhenSubscribedToAChannel2.TestForEmoji" executed="False" result="Inconclusive">
        <reason>
          <message>
          </message>
        </reason>
      </test-case>
      <test-case name="PubNubMessaging.Tests.WhenSubscribedToAChannel2.TestForEmojiCipher" executed="False" result="Inconclusive">
        <reason>
          <message>
          </message>
        </reason>
      </test-case>
      <test-case name="PubNubMessaging.Tests.WhenSubscribedToAChannel2.TestForEmojiCipherSecret" executed="False" result="Inconclusive">
        <reason>
          <message>
          </message>
        </reason>
      </test-case>
      <test-case name="PubNubMessaging.Tests.WhenSubscribedToAChannel2.TestForEmojiCipherSecretSSL" executed="False" result="Inconclusive">
        <reason>
          <message>
          </message>
        </reason>
      </test-case>
      <test-case name="PubNubMessaging.Tests.WhenSubscribedToAChannel2.TestForEmojiCipherSSL" executed="False" result="Inconclusive">
        <reason>
          <message>
          </message>
        </reason>
      </test-case>
      <test-case name="PubNubMessaging.Tests.WhenSubscribedToAChannel2.TestForEmojiSecret" executed="False" result="Inconclusive">
        <reason>
          <message>
          </message>
        </reason>
      </test-case>
      <test-case name="PubNubMessaging.Tests.WhenSubscribedToAChannel2.TestForEmojiSecretSSL" executed="False" result="Inconclusive">
        <reason>
          <message>
          </message>
        </reason>
      </test-case>
      <test-case name="PubNubMessaging.Tests.WhenSubscribedToAChannel2.TestForEmojiSSL" executed="False" result="Inconclusive">
        <reason>
          <message>
          </message>
        </reason>
      </test-case>
      <test-case name="PubNubMessaging.Tests.WhenSubscribedToAChannel2.ThenItShouldReturnReceivedMessage" executed="False" result="Inconclusive">
        <reason>
          <message>
          </message>
        </reason>
      </test-case>
      <test-case name="PubNubMessaging.Tests.WhenSubscribedToAChannel2.ThenItShouldReturnReceivedMessageCipher" executed="False" result="Inconclusive">
        <reason>
          <message>
          </message>
        </reason>
      </test-case>
      <test-case name="PubNubMessaging.Tests.WhenSubscribedToAChannel2.ThenItShouldReturnReceivedMessageCipherSSL" executed="False" result="Inconclusive">
        <reason>
          <message>
          </message>
        </reason>
      </test-case>
      <test-case name="PubNubMessaging.Tests.WhenSubscribedToAChannel2.ThenItShouldReturnReceivedMessageSecret" executed="False" result="Inconclusive">
        <reason>
          <message>
          </message>
        </reason>
      </test-case>
      <test-case name="PubNubMessaging.Tests.WhenSubscribedToAChannel2.ThenItShouldReturnReceivedMessageSecretCipher" executed="False" result="Inconclusive">
        <reason>
          <message>
          </message>
        </reason>
      </test-case>
      <test-case name="PubNubMessaging.Tests.WhenSubscribedToAChannel2.ThenItShouldReturnReceivedMessageSecretSSL" executed="False" result="Inconclusive">
        <reason>
          <message>
          </message>
        </reason>
      </test-case>
      <test-case name="PubNubMessaging.Tests.WhenSubscribedToAChannel2.ThenItShouldReturnReceivedMessageSecretSSLCipher" executed="False" result="Inconclusive">
        <reason>
          <message>
          </message>
        </reason>
      </test-case>
      <test-case name="PubNubMessaging.Tests.WhenSubscribedToAChannel2.ThenItShouldReturnReceivedMessageSSL" executed="False" result="Inconclusive">
        <reason>
          <message>
          </message>
        </reason>
      </test-case>
      <test-case name="PubNubMessaging.Tests.WhenSubscribedToAChannel3.TestForForwardSlash" executed="False" result="Inconclusive">
        <reason>
          <message>
          </message>
        </reason>
      </test-case>
      <test-case name="PubNubMessaging.Tests.WhenSubscribedToAChannel3.TestForForwardSlashCipher" executed="False" result="Inconclusive">
        <reason>
          <message>
          </message>
        </reason>
      </test-case>
      <test-case name="PubNubMessaging.Tests.WhenSubscribedToAChannel3.TestForForwardSlashCipherSecret" executed="False" result="Inconclusive">
        <reason>
          <message>
          </message>
        </reason>
      </test-case>
      <test-case name="PubNubMessaging.Tests.WhenSubscribedToAChannel3.TestForForwardSlashCipherSecretSSL" executed="False" result="Inconclusive">
        <reason>
          <message>
          </message>
        </reason>
      </test-case>
      <test-case name="PubNubMessaging.Tests.WhenSubscribedToAChannel3.TestForForwardSlashCipherSSL" executed="False" result="Inconclusive">
        <reason>
          <message>
          </message>
        </reason>
      </test-case>
      <test-case name="PubNubMessaging.Tests.WhenSubscribedToAChannel3.TestForForwardSlashSecret" executed="False" result="Inconclusive">
        <reason>
          <message>
          </message>
        </reason>
      </test-case>
      <test-case name="PubNubMessaging.Tests.WhenSubscribedToAChannel3.TestForForwardSlashSecretSSL" executed="False" result="Inconclusive">
        <reason>
          <message>
          </message>
        </reason>
      </test-case>
      <test-case name="PubNubMessaging.Tests.WhenSubscribedToAChannel3.TestForForwardSlashSSL" executed="False" result="Inconclusive">
        <reason>
          <message>
          </message>
        </reason>
      </test-case>
      <test-case name="PubNubMessaging.Tests.WhenSubscribedToAChannel3.TestForSpecialChar" executed="False" result="Inconclusive">
        <reason>
          <message>
          </message>
        </reason>
      </test-case>
      <test-case name="PubNubMessaging.Tests.WhenSubscribedToAChannel3.TestForSpecialCharCipher" executed="False" result="Inconclusive">
        <reason>
          <message>
          </message>
        </reason>
      </test-case>
      <test-case name="PubNubMessaging.Tests.WhenSubscribedToAChannel3.TestForSpecialCharCipherSecret" executed="False" result="Inconclusive">
        <reason>
          <message>
          </message>
        </reason>
      </test-case>
      <test-case name="PubNubMessaging.Tests.WhenSubscribedToAChannel3.TestForSpecialCharCipherSecretSSL" executed="False" result="Inconclusive">
        <reason>
          <message>
          </message>
        </reason>
      </test-case>
      <test-case name="PubNubMessaging.Tests.WhenSubscribedToAChannel3.TestForSpecialCharCipherSSL" executed="False" result="Inconclusive">
        <reason>
          <message>
          </message>
        </reason>
      </test-case>
      <test-case name="PubNubMessaging.Tests.WhenSubscribedToAChannel3.TestForSpecialCharSecret" executed="False" result="Inconclusive">
        <reason>
          <message>
          </message>
        </reason>
      </test-case>
      <test-case name="PubNubMessaging.Tests.WhenSubscribedToAChannel3.TestForSpecialCharSecretSSL" executed="False" result="Inconclusive">
        <reason>
          <message>
          </message>
        </reason>
      </test-case>
      <test-case name="PubNubMessaging.Tests.WhenSubscribedToAChannel3.TestForSpecialCharSSL" executed="False" result="Inconclusive">
        <reason>
          <message>
          </message>
        </reason>
      </test-case>
      <test-case name="PubNubMessaging.Tests.WhenSubscribedToAChannel3.TestForUnicode" executed="False" result="Inconclusive">
        <reason>
          <message>
          </message>
        </reason>
      </test-case>
      <test-case name="PubNubMessaging.Tests.WhenSubscribedToAChannel3.TestForUnicodeSSL" executed="False" result="Inconclusive">
        <reason>
          <message>
          </message>
        </reason>
      </test-case>
      <test-case name="PubNubMessaging.Tests.WhenUnsubscribedToAChannel.ThenNonExistentChannelShouldReturnNotSubscribed" executed="False" result="Inconclusive">
        <reason>
          <message>
          </message>
        </reason>
      </test-case>
      <test-case name="PubNubMessaging.Tests.WhenUnsubscribedToAChannel.ThenShouldReturnUnsubscribedMessage" executed="False" result="Inconclusive">
        <reason>
          <message>
          </message>
        </reason>
      </test-case>
      <test-case name="PubNubMessaging.Tests.WhenUnsubscribedToAChannel.ThenShouldReturnUnsubscribedMessageSSL" executed="False" result="Inconclusive">
        <reason>
          <message>
          </message>
        </reason>
      </test-case>
    </results>
  </test-suite>
</test-results>
ted="False" result="Inconclusive">
        <reason>
          <message>
          </message>
        </reason>
      </test-case>
      <test-case name="PubNubMessaging.Tests.WhenUnsubscribedToAChannel.ThenShouldReturnUnsubscribedMessageSSL" executed="False" result="Inconclusive">
        <reason>
          <message>
          </message>
        </reason>
      </test-case>
    </results>
  </test-suite>
</test-results>
>
          <message>
          </message>
        </reason>
      </test-case>
    </results>
  </test-suite>
</test-results>
